version: '3.9'
services:
  blog_dynamodb:
    image:  amazon/dynamodb-local
    container_name: blog_dynamodb
    hostname: blog.dynamodb
    restart: always
    volumes:
      - ./store:/home/dynamodblocal/data
    networks: 
      - blog
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"

  img_dynamodb:
    image:  amazon/dynamodb-local
    container_name: img_dynamodb
    hostname: img.dynamodb
    restart: always
    volumes:
      - ./store/db-img:/home/dynamodblocal/data
    networks: 
      - imageprocess
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"

  # dynamodb Admin
  admin_blog_dynamodb:
    image:  aaronshaf/dynamodb-admin
    environment:
      DYNAMO_ENDPOINT: "http://blog_dynamodb:8000"
      AWS_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    networks:
      - blog
    ports:
      - 8001:8001
    depends_on:
      - blog_dynamodb

  admin_img_dynamodb:
    image:  aaronshaf/dynamodb-admin
    environment:
      DYNAMO_ENDPOINT: "http://img_dynamodb:8000"
      AWS_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    networks:
      - imageprocess
    depends_on:
      - img_dynamodb

  # backends 
  blog_backend:
    container_name: luviz-msi-blog_back
    build:
      context: ./blog-back
      dockerfile: Dockerfile
    environment:
      DB_URL: "http://blog.dynamodb:8000"
    networks:
      - blog
    depends_on:
      - blog_dynamodb

  # api
  blog_api:
    container_name: luviz-msi-blog_api
    build: 
      context: ./blog-api
      dockerfile: Dockerfile
    environment:
      BLOG_URL: http://luviz-msi-blog_back
      PORT: 80 
    networks:
      - blog 
    depends_on:
      - blog_backend

  nginx:
    image: nginx
    container_name: rev-proxy
    depends_on:
      - blog_api
      - blog_backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80
    networks:
      - blog
      - imageprocess

  video_back:
    container_name: luviz-msi-video_back
    build: 
      context: ./video-back
      dockerfile: Dockerfile
    environment:
      BLOG_URL: http://luviz-msi-video_back
      PORT: 80 
    networks:
      - blog 



  # test
  net_work_test:
    image: luviz/network-tools
    tty: true
    networks:
      - blog
      - imageprocess



networks:
  imageprocess:
    name: imageprocess
    driver: bridge
  blog:
    name: blog
    driver: bridge
